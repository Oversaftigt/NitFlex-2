@using BlazorNitflex.Models

<RadzenFieldset Style="font-size:xx-large">
    <div class="container-fluid">
        <div class="row" style="display: flex;">
            <div class="col-8">

                <h2 style="font-size: xx-large; color: #333">@Movie.MovieName</h2>

                <div>
                    <p style="font-size:medium">@Movie.MovieDescription</p>

                    <p style="font-size:small; color:grey">Genre: @Movie.MovieGenre</p>
                    <p style="font-size:small; color:grey">Duration: @Movie.MovieDurationInMinutes</p>
                    <p style="font-size:small; color:grey">Rentalprice: @Movie.MovieRentalPrice</p>
                </div>
                <div>
                    <RadzenButton Text="Rent for one week" Style="background-color: rebeccapurple" Click="@OnRentMovieButton" />
                    <RadzenButton Text="Watch" Style="background-color: mediumpurple" Click="@OnWatchMovieButton" />
                </div>
            </div>
            <div class="col-4">
                <img src="https://t4.ftcdn.net/jpg/03/08/68/19/240_F_308681935_VSuCNvhuif2A8JknPiocgGR2Ag7D1ZqN.jpg" />
            </div>
        </div>
    </div>
</RadzenFieldset>


@code {
    [Parameter] public MovieItem Movie { get; set; }
    [Parameter] public EventCallback<Guid> OnRentMovie { get; set; }
    [Parameter] public EventCallback<Guid> OnWatchMovie { get; set; }

    //Sends movie ID back to parent to rent movie
    private async Task OnRentMovieButton()
    {
        await OnRentMovie.InvokeAsync(Movie.Id);
    }

    //Sends movie ID back to parent to watch movie
    private async Task OnWatchMovieButton()
    {
        await OnWatchMovie.InvokeAsync(Movie.Id);
    }
}
